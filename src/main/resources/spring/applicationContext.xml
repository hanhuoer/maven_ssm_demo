<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 注解扫描 base-package扫描哪个包 -->
    <context:component-scan base-package="com.aaa"/>
    <!-- 解析注解 -->
    <context:annotation-config/>

    <mvc:annotation-driven>
        <!-- 处理responseBody 里面日期类型 -->
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="dateFormat">
                            <bean class="java.text.SimpleDateFormat">
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd"/>
                            </bean>
                        </property>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!-- 静态资源 告诉springmvc 不要拦截静态资源  -->
    <mvc:default-servlet-handler/>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"></property>
        <property name="suffix" value=".html"></property>
    </bean>

    <!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 指定所上传文件的总大小不能超过200000KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
        <property name="maxUploadSize" value="200000000"/>
        <property name="defaultEncoding" value="UTF-8"></property>
    </bean>

    <!-- 跨域请求  -->
    <mvc:cors>
        <mvc:mapping path="/**"/>
    </mvc:cors>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/"/>
            <mvc:exclude-mapping path="/index.html"/>
            <mvc:exclude-mapping path="/emp/login"/>
            <bean class="com.aaa.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>


    <!--  spring整合mybatis  -->

    <!-- 获取druid.properties文件的内容
                相当于 拿到了数据库连接的所有信息
    -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:druid.properties"></property>
    </bean>

    <!-- 配置druid的数据源（数据库连接池）-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
    <!-- mybatis工厂配置  -->
    <bean id="sqlFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 配置mybatis的数据源  使用的是druid的数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <!--加载  mybatis-config.xml-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!--sql mapper的路径 -->
        <property name="mapperLocations" value="classpath:mapper/*Mapper.xml"/>
        <!-- 别名扫描 -->
        <property name="typeAliasesPackage" value="com.aaa.vo"></property>
    </bean>

    <!--  -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 与mapper对用的接口 所在包  -->
        <property name="basePackage" value="com.aaa.mapper"/>
        <!-- sqlSessionFactoryBeanName -->
        <property name="sqlSessionFactoryBeanName" value="sqlFactory"></property>
    </bean>

    <!-- 事务管理 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 事务通知 -->
    <tx:advice id="tm" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="search*" read-only="true"/>
            <tx:method name="list*" read-only="true"/>
            <tx:method name="query*" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut expression="execution(* com.aaa.service.*Service.*(..))" id="pointCut"/>
        <aop:advisor advice-ref="tm" pointcut-ref="pointCut"/>
    </aop:config>
</beans>






